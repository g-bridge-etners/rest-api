/*****************************************************************************
                        gb_user 생성문 (임시)
******************************************************************************/
CREATE TABLE gb_user (
    u_employee_number VARCHAR(25) NOT NULL,
    u_password VARCHAR(50) NOT NULL,
    u_name VARCHAR(20) NOT NULL,
    u_department VARCHAR(30) NOT NULL,
    PRIMARY KEY (u_employee_number)
);



/****************************************************************************
                        gb_temp 생성문 (임시)
*****************************************************************************/
CREATE TABLE gb_temp (
	c_id INT NOT NULL AUTO_INCREMENT,
	c_employee_number VARCHAR(25) NOT NULL,
    c_date DATETIME,
	c_clock_in DATETIME NOT NULL,
	c_clock_out DATETIME DEFAULT null,
    c_status varchar(25),
	PRIMARY KEY (c_id),
	FOREIGN KEY (c_employee_number) REFERENCES gb_user(u_employee_number) ON DELETE CASCADE ON UPDATE CASCADE
);



/****************************** ***********************************************
                        gb_attendance 생성문 (임시)
******************************************************************************/
CREATE TABLE gb_attendance (
    a_employee_number VARCHAR(25) NOT NULL,
    a_title VARCHAR(50) DEFAULT NULL,
    a_description VARCHAR(200) DEFAULT NULL,
    a_start_date DATETIME DEFAULT NULL,
    a_end_date DATETIME DEFAULT NULL,
    a_start_time DATETIME DEFAULT NULL,
    a_end_time DATETIME DEFAULT NULL,
    PRIMARY KEY (a_employee_number),
    FOREIGN KEY (a_employee_number) REFERENCES gb_user(u_employee_number) ON DELETE CASCADE ON UPDATE CASCADE
);



/*****************************************************************************
                        gb_loaction 생성문 (임시)
******************************************************************************/
CREATE TABLE gb_location (
    l_method VARCHAR(20) NOT NULL,
    l_latitude DOUBLE DEFAULT null,
    l_longitude DOUBLE DEFAULT null,
    l_ap VARCHAR(50) DEFAULT null
);


-----------------------------------admin--------------------------------------------


/****************************************************************************
                    admin.js - getDailyReport 기록 select문
*****************************************************************************/
SELECT a.a_employee_number, a.a_start_time AS start_time, a.a_end_time AS end_time, c.c_date as date, c.c_clock_in AS clock_in, c.c_clock_out AS clock_out, u.u_name AS name, u.u_department AS department, u.u_employee_number AS employee_number
FROM gb_attendance a
LEFT JOIN gb_temp c ON a.a_employee_number = c.c_employee_number AND c.c_date = "20-07-05"
LEFT JOIN gb_user u ON a.a_employee_number = u.u_employee_number
WHERE a.a_start_date <= "20-07-05" AND a.a_end_date >= "20-07-05";



/****************************************************************************
                    admin.js - putAttendance 근태 정보 update문
*****************************************************************************/
UPDATE gb_attendance SET a_title = ?, a_description = ?, a_start_date = ?, a_end_date = ?, a_start_time = STR_TO_DATE(?, "%H:%i"), a_end_time = STR_TO_DATE(?, "%H:%i") WHERE a_employee_number = ?


// test용 임시
UPDATE gb_attendance SET a_start_date = DATE_FORMAT("20-07-19", "%y-%m-%d") WHERE a_employee_number = '200000000'; // 가능
UPDATE gb_attendance SET a_start_date = "20-07-19" WHERE a_employee_number = '200000000'; // 가능
UPDATE gb_attendance SET a_start_time = STR_TO_DATE('09:00', "%H:%i") WHERE a_employee_number = '200000000'; // 가능

SET sql_mode='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';



/****************************************************************************
                    admin.js - putAttendance 근태 정보 select문
*****************************************************************************/
SELECT u_employee_number, u_name, u_department, a_title, a_description, a_start_date, a_end_date, a_start_time, a_end_time FROM gb_user, gb_attendance
WHERE u_employee_number = a_employee_number
ORDER BY u_employee_number ASC, a_employee_number ASC



-----------------------------------auth--------------------------------------------



/****************************************************************************
                    auth.js - register 회원가입 insert문
*****************************************************************************/
INSERT INTO gb_user (u_employee_number, u_password, u_name, u_department) VALUES(?, ?, ?, ?)



/****************************************************************************
                    auth.js - login 로그인 select문
*****************************************************************************/
SELECT u_employee_number, u_password, u_name, u_department FROM gb_user WHERE u_employee_number = ?



----------------------------------commute-----------------------------------------



/****************************************************************************
                    commute.js - status db에 저장된 상태 select문
*****************************************************************************/
SELECT t.c_status AS c_status, TIME(t.c_clock_in) AS c_clock_in_time, TIME(t.c_clock_out) AS c_clock_out_time, u.u_name AS u_name
FROM gb_temp t, gb_user u WHERE t.c_employee_number = ? AND t.c_date = curdate() AND t.c_employee_number = u.u_employee_number



/****************************************************************************
                    commute.js - check 출근 상태 select문
*****************************************************************************/
SELECT c_status FROM gb_temp WHERE c_employee_number = ? AND c_date = curdate()



/****************************************************************************
                    commute.js - check 출근 insert문
*****************************************************************************/
INSERT INTO gb_temp (c_employee_number, c_date, c_clock_in, c_status) VALUES(?, curdate(), curtime(), "출근중")



/****************************************************************************
                    commute.js - check 퇴근 상태 select문
*****************************************************************************/
SELECT c_status FROM gb_temp WHERE c_employee_number = ? AND c_date = curdate()



/****************************************************************************
                    commute.js - check 퇴근 update문
*****************************************************************************/
UPDATE gb_temp SET c_clock_out = curtime(), c_status = "퇴근완료" WHERE c_employee_number = ? AND c_date = curdate() AND c_status = "출근중"



/****************************************************************************
                    commute.js - history 기록 select문
*****************************************************************************/
SELECT c_status, DATE(c_date) AS c_date, TIME(c_clock_in) AS c_clock_in_time,  TIME(c_clock_out) AS c_clock_out_time FROM gb_temp WHERE c_employee_number = ? ORDER BY c_date ASC


//임시
INSERT INTO gb_temp (c_employee_number, c_date, c_clock_in, c_clock_out, c_status) VALUES(
'200000000', curdate(), curtime(), curtime(), '퇴근완료'
);
